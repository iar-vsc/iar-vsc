{
  "name": "iar-vsc",
  "displayName": "IAR For Visual Studio Code",
  "description": "Develop IAR projects with intellisense, C-STAT and build support.",
  "version": "1.3.0",
  "publisher": "pluyckx",
  "icon": "images/logo.png",
  "preview": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/pluyckx/iar-vsc.git"
  },
  "engines": {
    "vscode": "^1.33.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "IAR",
    "ARM",
    "AVR",
    "STM8",
    "Embedded"
  ],
  "activationEvents": [
    "onCommand:iar.selectWorkbench",
    "onCommand:iar.selectCompiler",
    "onCommand:iar.selectProject",
    "onCommand:iar.selectConfiguration",
    "onCommand:iar.regenerateCppToolsConfig",
    "onCommand:iar.selectIarWorkspace",
    "workspaceContains:**/*.ewp"
  ],
  "main": "./out/src/main",
  "contributes": {
    "commands": [
      {
        "command": "iar.selectWorkbench",
        "title": "Select Workbench",
        "category": "IAR"
      },
      {
        "command": "iar.selectCompiler",
        "title": "Select Compiler",
        "category": "IAR"
      },
      {
        "command": "iar.selectProject",
        "title": "Select Project",
        "category": "IAR"
      },
      {
        "command": "iar.selectConfiguration",
        "title": "Select Configuration",
        "category": "IAR"
      },
      {
        "command": "iar.regenerateCppToolsConfig",
        "title": "Reload project configuration",
        "category": "IAR"
      },
      {
        "command": "iar-settings.workbench",
        "title": "Get the selected workbench location",
        "category": "IAR Settings"
      },
      {
        "command": "iar-settings.compiler",
        "title": "Get the selected compiler location",
        "category": "IAR Settings"
      },
      {
        "command": "iar-settings.project-file",
        "title": "Get the selected project file",
        "category": "IAR Settings"
      },
      {
        "command": "iar-settings.project-configuration",
        "title": "Get the selected project configuration",
        "category": "IAR Settings"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "iar-settings",
          "name": "IAR Settings"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "iar.regenerateCppToolsConfig",
          "when": "view == iar-settings"
        }
      ]
    },
    "grammars": [
      {
        "scopeName": "iar-keywords.injection",
        "path": "./syntaxes/iar-c-cpp.tmLanguage.json",
        "injectTo": [
          "source.c",
          "source.cpp"
        ]
      }
    ],
    "configuration": {
      "title": "IAR",
      "properties": {
        "iarvsc.iarInstallDirectories": {
          "type": "array",
          "description": "Root path where IAR installs its applications.",
          "default": [
            "C:\\Program Files\\IAR Systems",
            "C:\\Program Files (x86)\\IAR Systems"
          ]
        },
        "iarvsc.defines": {
          "type": "array",
          "description": "A list of defines to use which are not listed in the project xml or compiler output. You can for example define here compiler intrisics, like __max, __min, __eeprom, .... example __max: add `__max(a, b)=` to this list.",
          "default": [
            "_Pragma(x)=",
            "__eeprom=",
            "__flash=",
            "__no_init=",
            "__root="
          ]
        },
        "iarvsc.cStandard": {
          "type": "string",
          "enum": [
            "c89",
            "c99",
            "c11"
          ],
          "description": "The c standard to use in the config tool configuration.",
          "default": "c11"
        },
        "iarvsc.cppStandard": {
          "type": "string",
          "enum": [
            "c++98",
            "c++03",
            "c++11",
            "c++14",
            "c++17"
          ],
          "description": "The c++ standard to use in the config tool configuration.",
          "default": "c++14"
        },
        "iarvsc.c-StatFilterLevel": {
          "description": "C-STAT warnings with a lower severity than this are filtered out.",
          "default": "Medium",
          "type": "string",
          "enum": [
            "Low",
            "Medium",
            "High"
          ]
        },
        "iarvsc.c-StatDisplayLowSeverityWarningsAsHints": {
          "description": "If the filter level is set to Low, displays low severity C-STAT warnings as hints rather than warnings. This hides them from the problem list, but still shows them in the editor.",
          "type": "boolean",
          "default": false
        },
        "iarvsc.c-StatFilterSuppressions": {
          "description": "If checked, excludes suppressed warnings from the problems tab (e.g., marked inline via `//cstat -MISRA2004*`).",
          "type": "boolean",
          "default": true
        },
        "iarvsc.outFile": {
          "type": "string",
          "description": "Currently not used, but will be used in the future to generate launch configurations.",
          "default": ""
        },
        "iarvsc.gdb": {
          "type": "string",
          "markdownDescription": "The path to the gdb debugger to use. In case the executable is not on the `PATH` environment, you have to specify the full path.",
          "default": "arm-none-eabi-gdb.exe"
        },
        "iarvsc.gdbServer": {
          "type": "string",
          "markdownDescription": "The path to the gdb server to use. In case the executable is not on the `PATH` environment, you have to specify the full path.",
          "default": "JLinkGDBServerCL.exe"
        },
        "iarvsc.device": {
          "type": "string",
          "markdownDescription": "The name of the target microcontroller",
          "default": "undefined"
        },
        "iarvsc.extraBuildArguments": {
          "type": "array",
          "markdownDescription": "Extra command line arguments to supply to IarBuild.exe.",
          "default": []
        }
      }
    },
    "problemMatchers": [
      {
        "name": "iar-cc",
        "owner": "cpp",
        "fileLocation": "absolute",
        "pattern": {
          "regexp": "^([^(]*)\\((\\d*)\\)\\s*:\\s*([^\\[]*)[^:]*:\\s*(.*)",
          "file": 1,
          "line": 2,
          "severity": 3,
          "message": 4
        }
      },
      {
        "name": "iar-linker",
        "owner": "cpp",
        "fileLocation": "absolute",
        "pattern": {
          "regexp": "^([^\\[]*)[^\\]]*\\]\\s*:\\s*([^\\(]*)\\(\\s*(.*)\\s*\\)",
          "file": 3,
          "message": 2,
          "severity": 1,
          "kind": "file"
        }
      }
    ],
    "taskDefinitions": [
      {
        "type": "iar",
        "properties": {
          "command": {
            "type": "string",
            "description": "The command to use for the IarBuild.exe command",
            "enum": [
              "build",
              "rebuild",
              "open"
            ]
          },
          "project": {
            "type": "string",
            "description": "The path to the project file"
          },
          "config": {
            "type": "string",
            "description": "The configuration in the project file to use"
          },
          "workbench": {
            "type": "string",
            "description": "Path to the workbench to use"
          },
          "builder": {
            "type": "string",
            "description": "Path to the builder to use"
          },
          "workspace": {
            "type": "string",
            "description": "The path to the workspace file to use"
          },
          "label": {
            "type": "string",
            "description": "The name for the task that is shown when executing the built-in command `Run Tasks` of VS Code."
          }
        },
        "required": [
          "command"
        ]
      },
      {
        "type": "iar-cstat",
        "properties": {
          "label": {
            "type": "string",
            "description": "The name for the task that is shown when executing the built-in command `Run Tasks` of VS Code."
          },
          "action": {
            "type": "string",
            "enum": [
              "run",
              "clear"
            ],
            "description": "What to do when running the task (generate warnings or clear them)"
          },
          "project": {
            "type": "string",
            "description": "The path to the project file"
          },
          "config": {
            "type": "string",
            "description": "The configuration in the project file to use"
          },
          "builder": {
            "type": "string",
            "description": "Path to the builder to use"
          }
        },
        "required": [
          "label",
          "action"
        ]
      }
    ],
    "debuggers": [
      {
        "type": "IAR: gdb server",
        "configurationSnippets": [
          {
            "label": "IAR: Debug using gdb server",
            "description": "Description",
            "body": {
              "name": "Debug GDBServer",
              "type": "cppdbg",
              "request": "launch",
              "program": "Absolute path to the out file.",
              "stopAtEntry": true,
              "cwd": "${${workspaceFolder}workspaceFolder}",
              "externalConsole": true,
              "MIMode": "gdb",
              "miDebuggerPath": "${${c}config:iarvsc.gdb}",
              "debugServerPath": "${${c}config:iarvsc.gdbServer}",
              "debugServerArgs": "-if swd -singlerun -strict -endian little -speed auto -port 3333 -device ${${c}config:iarvsc.device} -vd -strict -halt",
              "serverStarted": "Connected\\\\ to\\\\ target",
              "serverLaunchTimeout": 5000,
              "filterStderr": false,
              "filterStdout": true,
              "setupCommands": [
                {
                  "text": "target remote localhost:3333"
                },
                {
                  "text": "monitor flash breakpoints = 1"
                },
                {
                  "text": "monitor flash download = 1"
                },
                {
                  "text": "monitor reset"
                },
                {
                  "text": "load \\\\\"Path to the out file.\\\\\""
                },
                {
                  "text": "monitor reset"
                }
              ]
            }
          }
        ]
      }
    ]
  },
  "extensionDependencies": [
    "ms-vscode.cpptools"
  ],
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "test": "npm run compile && node ./out/test/runTests.js"
  },
  "devDependencies": {
    "@types/common-tags": "^1.8.1",
    "@types/mocha": "^2.2.42",
    "@types/node": "^8.10.25",
    "@types/sqlite3": "^3.1.7",
    "@types/vscode": "^1.33.0",
    "mocha": "^9.1.3",
    "ts-sinon": "1.0.12",
    "tslint": "^5.20.1",
    "typescript": "^4.4.4",
    "vscode-test": "^1.3.0"
  },
  "dependencies": {
    "child-exec": "1.0.0",
    "common-tags": "^1.8.2",
    "fast-deep-equal": "2.0.1",
    "jsonc-parser": "1.0.0",
    "sqlite": "^4.0.23",
    "sqlite3-offline": "github:shihuihzh/sqlite3-offline#master",
    "vscode-cpptools": "^3.0.1",
    "vscode-jsonrpc": "^3.0.0",
    "xml-js": "1.6.8"
  }
}